angular.module("study",[]).run(["$rootScope","$location",function(e,t){function r(t){for(var r=0;r<e.phrases.length;r++){var n=e.phrases[r];if(n.id==t)return n}}e.page="main",e.search="",e.phrases=window.phrases,e.edit=!1,e.open=function(e){t.url("edit/"+e.id)},e.$on("$locationChangeSuccess",function(){var n;"/add"===t.url()?e.edit=!0:(n=t.url().match(/^\/edit\/(.+)/))?(e.edit=r(n[1]),e.edit||t.url("/")):(e.edit=!1,"/"!==t.url()&&t.url("/"))})}]),angular.module("study").controller("EditController",["$scope","$rootScope","$http","$location",function(e,t,r,n){function i(){return{en:e.en,th:e.th,tags:e.tags}}function o(e,r){for(var n=0;n<t.phrases.length;n++){var i=t.phrases[n];if(i.id===e)return void angular.extend(i,r)}}function a(e){for(var r=0;r<t.phrases.length;r++)if(t.phrases[r].id===e)return void t.phrases.splice(r,1)}function s(e){console.log(e),alert("Sorry, something went wrong. Try again.")}e.empty=function(){e.id=null,e.en="",e.th="",e.tags=""},e.edit=function(t){angular.extend(e,t)},e.add=function(){var e=i();r.post("api/phrases",e).success(function(r){e.id=r.id,t.phrases.unshift(e)}).error(s),n.url("/")},e.update=function(){var t=i();r.put("api/phrases/"+e.id,t).success(function(){o(e.id,t)}).error(s),n.url("/")},e.destroy=function(t){t.preventDefault(),confirm("You really want to delete this phrase?")&&(r.delete("api/phrases/"+e.id).success(function(){a(e.id)}).error(s),n.url("/"))},angular.isObject(t.edit)?e.edit(t.edit):e.empty()}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljL2J1aWxkLmpzIiwic291cmNlcyI6WyJzdHVkeS5qcyIsImNvbnRyb2xsZXJzL0VkaXRDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFFBQUEsT0FBQSxZQUVBLEtBQUEsYUFBQSxZQUFBLFNBQUEsRUFBQSxHQTRCQSxRQUFBLEdBQUEsR0FDQSxJQUFBLEdBQUEsR0FBQSxFQUFBLEVBQUEsRUFBQSxRQUFBLE9BQUEsSUFBQSxDQUNBLEdBQUEsR0FBQSxFQUFBLFFBQUEsRUFDQSxJQUFBLEVBQUEsSUFBQSxFQUFBLE1BQUEsSUE3QkEsRUFBQSxLQUFBLE9BQ0EsRUFBQSxPQUFBLEdBQ0EsRUFBQSxRQUFBLE9BQUEsUUFDQSxFQUFBLE1BQUEsRUFHQSxFQUFBLEtBQUEsU0FBQSxHQUNBLEVBQUEsSUFBQSxRQUFBLEVBQUEsS0FHQSxFQUFBLElBQUEseUJBQUEsV0FDQSxHQUFBLEVBQ0EsVUFBQSxFQUFBLE1BQ0EsRUFBQSxNQUFBLEdBRUEsRUFBQSxFQUFBLE1BQUEsTUFBQSxtQkFDQSxFQUFBLEtBQUEsRUFBQSxFQUFBLElBQ0EsRUFBQSxNQUFBLEVBQUEsSUFBQSxPQUdBLEVBQUEsTUFBQSxFQUNBLE1BQUEsRUFBQSxPQUFBLEVBQUEsSUFBQSxXQ3pCQSxRQUFBLE9BQUEsU0FBQSxXQUFBLGtCQUFBLFNBQUEsYUFBQSxRQUFBLFlBQUEsU0FBQSxFQUFBLEVBQUEsRUFBQSxHQThEQSxRQUFBLEtBQ0EsT0FDQSxHQUFBLEVBQUEsR0FDQSxHQUFBLEVBQUEsR0FDQSxLQUFBLEVBQUEsTUFJQSxRQUFBLEdBQUEsRUFBQSxHQUNBLElBQUEsR0FBQSxHQUFBLEVBQUEsRUFBQSxFQUFBLFFBQUEsT0FBQSxJQUFBLENBQ0EsR0FBQSxHQUFBLEVBQUEsUUFBQSxFQUNBLElBQUEsRUFBQSxLQUFBLEVBRUEsV0FEQSxTQUFBLE9BQUEsRUFBQSxJQU1BLFFBQUEsR0FBQSxHQUNBLElBQUEsR0FBQSxHQUFBLEVBQUEsRUFBQSxFQUFBLFFBQUEsT0FBQSxJQUNBLEdBQUEsRUFBQSxRQUFBLEdBQUEsS0FBQSxFQUVBLFdBREEsR0FBQSxRQUFBLE9BQUEsRUFBQSxHQU1BLFFBQUEsR0FBQSxHQUNBLFFBQUEsSUFBQSxHQUNBLE1BQUEsMkNBeEZBLEVBQUEsTUFBQSxXQUNBLEVBQUEsR0FBQSxLQUNBLEVBQUEsR0FBQSxHQUNBLEVBQUEsR0FBQSxHQUNBLEVBQUEsS0FBQSxJQUdBLEVBQUEsS0FBQSxTQUFBLEdBQ0EsUUFBQSxPQUFBLEVBQUEsSUFJQSxFQUFBLElBQUEsV0FFQSxHQUFBLEdBQUEsR0FFQSxHQUFBLEtBQUEsY0FBQSxHQUNBLFFBQUEsU0FBQSxHQUNBLEVBQUEsR0FBQSxFQUFBLEdBQ0EsRUFBQSxRQUFBLFFBQUEsS0FFQSxNQUFBLEdBRUEsRUFBQSxJQUFBLE1BS0EsRUFBQSxPQUFBLFdBRUEsR0FBQSxHQUFBLEdBRUEsR0FBQSxJQUFBLGVBQUEsRUFBQSxHQUFBLEdBQ0EsUUFBQSxXQUNBLEVBQUEsRUFBQSxHQUFBLEtBRUEsTUFBQSxHQUVBLEVBQUEsSUFBQSxNQUlBLEVBQUEsUUFBQSxTQUFBLEdBRUEsRUFBQSxpQkFFQSxRQUFBLDRDQUVBLEVBQUEsT0FBQSxlQUFBLEVBQUEsSUFDQSxRQUFBLFdBQ0EsRUFBQSxFQUFBLE1BRUEsTUFBQSxHQUVBLEVBQUEsSUFBQSxPQXVDQSxRQUFBLFNBQUEsRUFBQSxNQUNBLEVBQUEsS0FBQSxFQUFBLE1BRUEsRUFBQSIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdzdHVkeScsIFtdKVxuXG4gIC5ydW4oZnVuY3Rpb24gKCRyb290U2NvcGUsICRsb2NhdGlvbikge1xuXG4gICAgJHJvb3RTY29wZS5wYWdlICAgID0gJ21haW4nO1xuICAgICRyb290U2NvcGUuc2VhcmNoICA9ICcnO1xuICAgICRyb290U2NvcGUucGhyYXNlcyA9IHdpbmRvdy5waHJhc2VzO1xuICAgICRyb290U2NvcGUuZWRpdCAgICA9IGZhbHNlO1xuXG5cbiAgICAkcm9vdFNjb3BlLm9wZW4gPSBmdW5jdGlvbiAocGhyYXNlKSB7XG4gICAgICAkbG9jYXRpb24udXJsKCdlZGl0LycgKyBwaHJhc2UuaWQpO1xuICAgIH07XG5cbiAgICAkcm9vdFNjb3BlLiRvbignJGxvY2F0aW9uQ2hhbmdlU3VjY2VzcycsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBtYXRjaDtcbiAgICAgIGlmICgkbG9jYXRpb24udXJsKCkgPT09ICcvYWRkJykge1xuICAgICAgICAkcm9vdFNjb3BlLmVkaXQgPSB0cnVlO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAobWF0Y2ggPSAkbG9jYXRpb24udXJsKCkubWF0Y2goL15cXC9lZGl0XFwvKC4rKS8pKSB7XG4gICAgICAgICRyb290U2NvcGUuZWRpdCA9IGZpbmRQaHJhc2UobWF0Y2hbMV0pO1xuICAgICAgICBpZiAoISRyb290U2NvcGUuZWRpdCkgJGxvY2F0aW9uLnVybCgnLycpO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgICRyb290U2NvcGUuZWRpdCA9IGZhbHNlO1xuICAgICAgICBpZiAoJGxvY2F0aW9uLnVybCgpICE9PSAnLycpICRsb2NhdGlvbi51cmwoJy8nKTtcbiAgICAgIH1cbiAgICB9KTtcblxuXG4gICAgZnVuY3Rpb24gZmluZFBocmFzZShpZCkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAkcm9vdFNjb3BlLnBocmFzZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHBocmFzZSA9ICRyb290U2NvcGUucGhyYXNlc1tpXTtcbiAgICAgICAgaWYgKHBocmFzZS5pZCA9PSBpZCkgcmV0dXJuIHBocmFzZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgfSk7XG5cbiIsImFuZ3VsYXIubW9kdWxlKCdzdHVkeScpLmNvbnRyb2xsZXIoJ0VkaXRDb250cm9sbGVyJywgZnVuY3Rpb24gKCRzY29wZSwgJHJvb3RTY29wZSwgJGh0dHAsICRsb2NhdGlvbikge1xuXG5cbiAgJHNjb3BlLmVtcHR5ID0gZnVuY3Rpb24gKCkge1xuICAgICRzY29wZS5pZCAgID0gbnVsbDtcbiAgICAkc2NvcGUuZW4gICA9ICcnO1xuICAgICRzY29wZS50aCAgID0gJyc7XG4gICAgJHNjb3BlLnRhZ3MgPSAnJztcbiAgfVxuXG4gICRzY29wZS5lZGl0ID0gZnVuY3Rpb24gKHBocmFzZSkge1xuICAgIGFuZ3VsYXIuZXh0ZW5kKCRzY29wZSwgcGhyYXNlKTtcbiAgfVxuXG5cbiAgJHNjb3BlLmFkZCA9IGZ1bmN0aW9uICgpIHtcblxuICAgIHZhciBwaHJhc2UgPSBnZXREYXRhKCk7XG5cbiAgICAkaHR0cC5wb3N0KCdhcGkvcGhyYXNlcycsIHBocmFzZSlcbiAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgcGhyYXNlLmlkID0gcmVzLmlkO1xuICAgICAgICAkcm9vdFNjb3BlLnBocmFzZXMudW5zaGlmdChwaHJhc2UpO1xuICAgICAgfSlcbiAgICAgIC5lcnJvcihlcnIpO1xuXG4gICAgJGxvY2F0aW9uLnVybCgnLycpO1xuXG4gIH07XG5cblxuICAkc2NvcGUudXBkYXRlID0gZnVuY3Rpb24gKCkge1xuXG4gICAgdmFyIHBocmFzZSA9IGdldERhdGEoKTtcblxuICAgICRodHRwLnB1dCgnYXBpL3BocmFzZXMvJyArICRzY29wZS5pZCwgcGhyYXNlKVxuICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKCkge1xuICAgICAgICB1cGRhdGVQaHJhc2UoJHNjb3BlLmlkLCBwaHJhc2UpO1xuICAgICAgfSlcbiAgICAgIC5lcnJvcihlcnIpO1xuXG4gICAgJGxvY2F0aW9uLnVybCgnLycpO1xuXG4gIH07XG5cbiAgJHNjb3BlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoJGV2ZW50KSB7XG5cbiAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIGlmICghY29uZmlybSgnWW91IHJlYWxseSB3YW50IHRvIGRlbGV0ZSB0aGlzIHBocmFzZT8nKSkgcmV0dXJuO1xuXG4gICAgJGh0dHAuZGVsZXRlKCdhcGkvcGhyYXNlcy8nICsgJHNjb3BlLmlkKVxuICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKCkge1xuICAgICAgICByZW1vdmVQaHJhc2UoJHNjb3BlLmlkKTtcbiAgICAgIH0pXG4gICAgICAuZXJyb3IoZXJyKTtcblxuICAgICRsb2NhdGlvbi51cmwoJy8nKTtcblxuICB9O1xuXG5cbiAgZnVuY3Rpb24gZ2V0RGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZW46ICRzY29wZS5lbixcbiAgICAgIHRoOiAkc2NvcGUudGgsXG4gICAgICB0YWdzOiAkc2NvcGUudGFnc1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVQaHJhc2UoaWQsIGRhdGEpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8ICRyb290U2NvcGUucGhyYXNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHBocmFzZSA9ICRyb290U2NvcGUucGhyYXNlc1tpXTtcbiAgICAgIGlmIChwaHJhc2UuaWQgPT09IGlkKSB7XG4gICAgICAgIGFuZ3VsYXIuZXh0ZW5kKHBocmFzZSwgZGF0YSlcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZVBocmFzZShpZCkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgJHJvb3RTY29wZS5waHJhc2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoJHJvb3RTY29wZS5waHJhc2VzW2ldLmlkID09PSBpZCkge1xuICAgICAgICAkcm9vdFNjb3BlLnBocmFzZXMuc3BsaWNlKGksIDEpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZXJyKG1zZykge1xuICAgIGNvbnNvbGUubG9nKG1zZyk7XG4gICAgYWxlcnQoJ1NvcnJ5LCBzb21ldGhpbmcgd2VudCB3cm9uZy4gVHJ5IGFnYWluLicpO1xuICB9XG5cblxuXG4gIGlmIChhbmd1bGFyLmlzT2JqZWN0KCRyb290U2NvcGUuZWRpdCkpIHtcbiAgICAkc2NvcGUuZWRpdCgkcm9vdFNjb3BlLmVkaXQpO1xuICB9IGVsc2Uge1xuICAgICRzY29wZS5lbXB0eSgpO1xuICB9XG5cblxufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9