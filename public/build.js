angular.module("study",[]).run(["$rootScope","$location","$window",function(e,n,t){function r(n){for(var t=0;t<e.phrases.length;t++){var r=e.phrases[t];if(r.id==n)return r}}e.page="main",e.search="",e.phrases=window.phrases,e.edit=!1,e.searchFocus=!1,e.focusSearch=function(){e.searchFocus=!0,t.scrollTo(0,0)},e.open=function(e){n.url("edit/"+e.id)},e.$on("$locationChangeSuccess",function(){var t;"/add"===n.url()?e.edit=!0:(t=n.url().match(/^\/edit\/(.+)/))?(e.edit=r(t[1]),e.edit||n.url("/")):(e.edit=!1,"/"!==n.url()&&n.url("/"))})}]),angular.module("study").controller("EditController",["$scope","$rootScope","$http","$location",function(e,n,t,r){function o(){return{en:e.en,th:e.th,tags:e.tags}}function i(e,t){for(var r=0;r<n.phrases.length;r++){var o=n.phrases[r];if(o.id===e)return void angular.extend(o,t)}}function a(e){for(var t=0;t<n.phrases.length;t++)if(n.phrases[t].id===e)return void n.phrases.splice(t,1)}function s(e,n,t){console.log("ERROR at: "+n+' "'+t+'" : ',e),alert("Sorry, something went wrong while trying to "+n+" "+t+". Try again.")}e.empty=function(){e.id=null,e.en="",e.th="",e.tags=""},e.edit=function(n){angular.extend(e,n)},e.add=function(){var e=o();t.post("api/phrases",e).success(function(t){e.id=t.id,n.phrases.unshift(e)}).error(function(n){s(n,"add",e.en)}),r.url("/")},e.update=function(){var n=o();t.put("api/phrases/"+e.id,n).success(function(){i(e.id,n)}).error(function(e){s(e,"update",n.en)}),r.url("/")},e.destroy=function(n){n.preventDefault(),confirm("You really want to delete this phrase?")&&(t.delete("api/phrases/"+e.id).success(function(){a(e.id)}).error(function(e){s(e,"delete",phrase.en)}),r.url("/"))},angular.isObject(n.edit)?e.edit(n.edit):e.empty()}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljL2J1aWxkLmpzIiwic291cmNlcyI6WyJzdHVkeS5qcyIsImNvbnRyb2xsZXJzL0VkaXRDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFFBQUEsT0FBQSxZQUVBLEtBQUEsYUFBQSxZQUFBLFVBQUEsU0FBQSxFQUFBLEVBQUEsR0FpQ0EsUUFBQSxHQUFBLEdBQ0EsSUFBQSxHQUFBLEdBQUEsRUFBQSxFQUFBLEVBQUEsUUFBQSxPQUFBLElBQUEsQ0FDQSxHQUFBLEdBQUEsRUFBQSxRQUFBLEVBQ0EsSUFBQSxFQUFBLElBQUEsRUFBQSxNQUFBLElBbENBLEVBQUEsS0FBQSxPQUNBLEVBQUEsT0FBQSxHQUNBLEVBQUEsUUFBQSxPQUFBLFFBQ0EsRUFBQSxNQUFBLEVBQ0EsRUFBQSxhQUFBLEVBRUEsRUFBQSxZQUFBLFdBQ0EsRUFBQSxhQUFBLEVBQ0EsRUFBQSxTQUFBLEVBQUEsSUFHQSxFQUFBLEtBQUEsU0FBQSxHQUNBLEVBQUEsSUFBQSxRQUFBLEVBQUEsS0FHQSxFQUFBLElBQUEseUJBQUEsV0FDQSxHQUFBLEVBQ0EsVUFBQSxFQUFBLE1BQ0EsRUFBQSxNQUFBLEdBRUEsRUFBQSxFQUFBLE1BQUEsTUFBQSxtQkFDQSxFQUFBLEtBQUEsRUFBQSxFQUFBLElBQ0EsRUFBQSxNQUFBLEVBQUEsSUFBQSxPQUdBLEVBQUEsTUFBQSxFQUNBLE1BQUEsRUFBQSxPQUFBLEVBQUEsSUFBQSxXQzlCQSxRQUFBLE9BQUEsU0FBQSxXQUFBLGtCQUFBLFNBQUEsYUFBQSxRQUFBLFlBQUEsU0FBQSxFQUFBLEVBQUEsRUFBQSxHQW9FQSxRQUFBLEtBQ0EsT0FDQSxHQUFBLEVBQUEsR0FDQSxHQUFBLEVBQUEsR0FDQSxLQUFBLEVBQUEsTUFJQSxRQUFBLEdBQUEsRUFBQSxHQUNBLElBQUEsR0FBQSxHQUFBLEVBQUEsRUFBQSxFQUFBLFFBQUEsT0FBQSxJQUFBLENBQ0EsR0FBQSxHQUFBLEVBQUEsUUFBQSxFQUNBLElBQUEsRUFBQSxLQUFBLEVBRUEsV0FEQSxTQUFBLE9BQUEsRUFBQSxJQU1BLFFBQUEsR0FBQSxHQUNBLElBQUEsR0FBQSxHQUFBLEVBQUEsRUFBQSxFQUFBLFFBQUEsT0FBQSxJQUNBLEdBQUEsRUFBQSxRQUFBLEdBQUEsS0FBQSxFQUVBLFdBREEsR0FBQSxRQUFBLE9BQUEsRUFBQSxHQU1BLFFBQUEsR0FBQSxFQUFBLEVBQUEsR0FDQSxRQUFBLElBQUEsYUFBQSxFQUFBLEtBQUEsRUFBQSxPQUFBLEdBQ0EsTUFBQSwrQ0FBQSxFQUFBLElBQUEsRUFBQSxnQkE5RkEsRUFBQSxNQUFBLFdBQ0EsRUFBQSxHQUFBLEtBQ0EsRUFBQSxHQUFBLEdBQ0EsRUFBQSxHQUFBLEdBQ0EsRUFBQSxLQUFBLElBR0EsRUFBQSxLQUFBLFNBQUEsR0FDQSxRQUFBLE9BQUEsRUFBQSxJQUlBLEVBQUEsSUFBQSxXQUVBLEdBQUEsR0FBQSxHQUVBLEdBQUEsS0FBQSxjQUFBLEdBQ0EsUUFBQSxTQUFBLEdBQ0EsRUFBQSxHQUFBLEVBQUEsR0FDQSxFQUFBLFFBQUEsUUFBQSxLQUVBLE1BQUEsU0FBQSxHQUNBLEVBQUEsRUFBQSxNQUFBLEVBQUEsTUFHQSxFQUFBLElBQUEsTUFLQSxFQUFBLE9BQUEsV0FFQSxHQUFBLEdBQUEsR0FFQSxHQUFBLElBQUEsZUFBQSxFQUFBLEdBQUEsR0FDQSxRQUFBLFdBQ0EsRUFBQSxFQUFBLEdBQUEsS0FFQSxNQUFBLFNBQUEsR0FDQSxFQUFBLEVBQUEsU0FBQSxFQUFBLE1BR0EsRUFBQSxJQUFBLE1BSUEsRUFBQSxRQUFBLFNBQUEsR0FFQSxFQUFBLGlCQUVBLFFBQUEsNENBRUEsRUFBQSxPQUFBLGVBQUEsRUFBQSxJQUNBLFFBQUEsV0FDQSxFQUFBLEVBQUEsTUFFQSxNQUFBLFNBQUEsR0FDQSxFQUFBLEVBQUEsU0FBQSxPQUFBLE1BR0EsRUFBQSxJQUFBLE9BdUNBLFFBQUEsU0FBQSxFQUFBLE1BQ0EsRUFBQSxLQUFBLEVBQUEsTUFFQSxFQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ3N0dWR5JywgW10pXG5cbiAgLnJ1bihmdW5jdGlvbiAoJHJvb3RTY29wZSwgJGxvY2F0aW9uLCAkd2luZG93KSB7XG5cbiAgICAkcm9vdFNjb3BlLnBhZ2UgICAgICAgID0gJ21haW4nO1xuICAgICRyb290U2NvcGUuc2VhcmNoICAgICAgPSAnJztcbiAgICAkcm9vdFNjb3BlLnBocmFzZXMgICAgID0gd2luZG93LnBocmFzZXM7XG4gICAgJHJvb3RTY29wZS5lZGl0ICAgICAgICA9IGZhbHNlO1xuICAgICRyb290U2NvcGUuc2VhcmNoRm9jdXMgPSBmYWxzZTtcblxuICAgICRyb290U2NvcGUuZm9jdXNTZWFyY2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAkcm9vdFNjb3BlLnNlYXJjaEZvY3VzID0gdHJ1ZTtcbiAgICAgICR3aW5kb3cuc2Nyb2xsVG8oMCwwKTtcbiAgICB9O1xuXG4gICAgJHJvb3RTY29wZS5vcGVuID0gZnVuY3Rpb24gKHBocmFzZSkge1xuICAgICAgJGxvY2F0aW9uLnVybCgnZWRpdC8nICsgcGhyYXNlLmlkKTtcbiAgICB9O1xuXG4gICAgJHJvb3RTY29wZS4kb24oJyRsb2NhdGlvbkNoYW5nZVN1Y2Nlc3MnLCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgbWF0Y2g7XG4gICAgICBpZiAoJGxvY2F0aW9uLnVybCgpID09PSAnL2FkZCcpIHtcbiAgICAgICAgJHJvb3RTY29wZS5lZGl0ID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKG1hdGNoID0gJGxvY2F0aW9uLnVybCgpLm1hdGNoKC9eXFwvZWRpdFxcLyguKykvKSkge1xuICAgICAgICAkcm9vdFNjb3BlLmVkaXQgPSBmaW5kUGhyYXNlKG1hdGNoWzFdKTtcbiAgICAgICAgaWYgKCEkcm9vdFNjb3BlLmVkaXQpICRsb2NhdGlvbi51cmwoJy8nKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICAkcm9vdFNjb3BlLmVkaXQgPSBmYWxzZTtcbiAgICAgICAgaWYgKCRsb2NhdGlvbi51cmwoKSAhPT0gJy8nKSAkbG9jYXRpb24udXJsKCcvJyk7XG4gICAgICB9XG4gICAgfSk7XG5cblxuICAgIGZ1bmN0aW9uIGZpbmRQaHJhc2UoaWQpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgJHJvb3RTY29wZS5waHJhc2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBwaHJhc2UgPSAkcm9vdFNjb3BlLnBocmFzZXNbaV07XG4gICAgICAgIGlmIChwaHJhc2UuaWQgPT0gaWQpIHJldHVybiBwaHJhc2U7XG4gICAgICB9XG4gICAgfVxuXG4gIH0pO1xuXG4iLCJhbmd1bGFyLm1vZHVsZSgnc3R1ZHknKS5jb250cm9sbGVyKCdFZGl0Q29udHJvbGxlcicsIGZ1bmN0aW9uICgkc2NvcGUsICRyb290U2NvcGUsICRodHRwLCAkbG9jYXRpb24pIHtcblxuXG4gICRzY29wZS5lbXB0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICAkc2NvcGUuaWQgICA9IG51bGw7XG4gICAgJHNjb3BlLmVuICAgPSAnJztcbiAgICAkc2NvcGUudGggICA9ICcnO1xuICAgICRzY29wZS50YWdzID0gJyc7XG4gIH1cblxuICAkc2NvcGUuZWRpdCA9IGZ1bmN0aW9uIChwaHJhc2UpIHtcbiAgICBhbmd1bGFyLmV4dGVuZCgkc2NvcGUsIHBocmFzZSk7XG4gIH1cblxuXG4gICRzY29wZS5hZGQgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgcGhyYXNlID0gZ2V0RGF0YSgpO1xuXG4gICAgJGh0dHAucG9zdCgnYXBpL3BocmFzZXMnLCBwaHJhc2UpXG4gICAgICAuc3VjY2VzcyhmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgIHBocmFzZS5pZCA9IHJlcy5pZDtcbiAgICAgICAgJHJvb3RTY29wZS5waHJhc2VzLnVuc2hpZnQocGhyYXNlKTtcbiAgICAgIH0pXG4gICAgICAuZXJyb3IoZnVuY3Rpb24gKG1zZykge1xuICAgICAgICBlcnIobXNnLCAnYWRkJywgcGhyYXNlLmVuKTtcbiAgICAgIH0pO1xuXG4gICAgJGxvY2F0aW9uLnVybCgnLycpO1xuXG4gIH07XG5cblxuICAkc2NvcGUudXBkYXRlID0gZnVuY3Rpb24gKCkge1xuXG4gICAgdmFyIHBocmFzZSA9IGdldERhdGEoKTtcblxuICAgICRodHRwLnB1dCgnYXBpL3BocmFzZXMvJyArICRzY29wZS5pZCwgcGhyYXNlKVxuICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKCkge1xuICAgICAgICB1cGRhdGVQaHJhc2UoJHNjb3BlLmlkLCBwaHJhc2UpO1xuICAgICAgfSlcbiAgICAgIC5lcnJvcihmdW5jdGlvbiAobXNnKSB7XG4gICAgICAgIGVycihtc2csICd1cGRhdGUnLCBwaHJhc2UuZW4pO1xuICAgICAgfSk7XG5cbiAgICAkbG9jYXRpb24udXJsKCcvJyk7XG5cbiAgfTtcblxuICAkc2NvcGUuZGVzdHJveSA9IGZ1bmN0aW9uICgkZXZlbnQpIHtcblxuICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgaWYgKCFjb25maXJtKCdZb3UgcmVhbGx5IHdhbnQgdG8gZGVsZXRlIHRoaXMgcGhyYXNlPycpKSByZXR1cm47XG5cbiAgICAkaHR0cC5kZWxldGUoJ2FwaS9waHJhc2VzLycgKyAkc2NvcGUuaWQpXG4gICAgICAuc3VjY2VzcyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJlbW92ZVBocmFzZSgkc2NvcGUuaWQpO1xuICAgICAgfSlcbiAgICAgIC5lcnJvcihmdW5jdGlvbiAobXNnKSB7XG4gICAgICAgIGVycihtc2csICdkZWxldGUnLCBwaHJhc2UuZW4pO1xuICAgICAgfSk7XG5cbiAgICAkbG9jYXRpb24udXJsKCcvJyk7XG5cbiAgfTtcblxuXG4gIGZ1bmN0aW9uIGdldERhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGVuOiAkc2NvcGUuZW4sXG4gICAgICB0aDogJHNjb3BlLnRoLFxuICAgICAgdGFnczogJHNjb3BlLnRhZ3NcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlUGhyYXNlKGlkLCBkYXRhKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCAkcm9vdFNjb3BlLnBocmFzZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBwaHJhc2UgPSAkcm9vdFNjb3BlLnBocmFzZXNbaV07XG4gICAgICBpZiAocGhyYXNlLmlkID09PSBpZCkge1xuICAgICAgICBhbmd1bGFyLmV4dGVuZChwaHJhc2UsIGRhdGEpXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZW1vdmVQaHJhc2UoaWQpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8ICRyb290U2NvcGUucGhyYXNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKCRyb290U2NvcGUucGhyYXNlc1tpXS5pZCA9PT0gaWQpIHtcbiAgICAgICAgJHJvb3RTY29wZS5waHJhc2VzLnNwbGljZShpLCAxKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGVycihtc2csIGFjdGlvbiwgcGhyYXNlKSB7XG4gICAgY29uc29sZS5sb2coJ0VSUk9SIGF0OiAnK2FjdGlvbisnIFwiJytwaHJhc2UrJ1wiIDogJywgIG1zZyk7XG4gICAgYWxlcnQoJ1NvcnJ5LCBzb21ldGhpbmcgd2VudCB3cm9uZyB3aGlsZSB0cnlpbmcgdG8gJythY3Rpb24rJyAnK3BocmFzZSsnLiBUcnkgYWdhaW4uJyk7XG4gIH1cblxuXG5cbiAgaWYgKGFuZ3VsYXIuaXNPYmplY3QoJHJvb3RTY29wZS5lZGl0KSkge1xuICAgICRzY29wZS5lZGl0KCRyb290U2NvcGUuZWRpdCk7XG4gIH0gZWxzZSB7XG4gICAgJHNjb3BlLmVtcHR5KCk7XG4gIH1cblxuXG59KTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=